@model IEnumerable<CRUDWithDapperORMD8.Models.DTOs.BookDTO>
@{
    ViewData["Title"] = "Book Management";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="my-2">Book Management</h2>
            <a asp-controller="Home" asp-action="AddBookAsyncView" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Add New Book
            </a>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (ViewData.ModelState.IsValid == false)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var modelState in ViewData.ModelState.Values)
                        {
                            foreach (var error in modelState.Errors)
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        }
                    </ul>
                </div>
            }

            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>ID</th>
                                <th>Title</th>
                                <th>Author</th>
                                <th>Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var book in Model)
                            {
                                <tr id="book-row-@book.Id" data-book-id="@book.Id">
                                    <td>@book.Id</td>
                                    <td class="book-data">@book.Title</td>
                                    <td class="book-data">@book.Author</td>
                                    <td class="book-data">$@book.Price.ToString("F2")</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-warning edit-btn" onclick="toggleEdit(@book.Id)">
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <form asp-controller="Home" asp-action="DeleteBookAsync" method="post" style="display:inline"
                                              onsubmit="return confirm('Are you sure you want to delete this book?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@book.Id" />
                                            <button type="submit" class="btn btn-sm btn-danger">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                                <tr id="edit-row-@book.Id" style="display:none;" class="bg-light">
                                    <td>@book.Id</td>
                                    <td colspan="3">
                                        <form asp-controller="Home" asp-action="UpdateBookAsync" method="post" class="edit-book-form">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@book.Id" />
                                            <div class="row">
                                                <div class="col-md-4 mb-2">
                                                    <label class="form-label">Title</label>
                                                    <input type="text" class="form-control" name="Title" value="@book.Title" required />
                                                </div>
                                                <div class="col-md-4 mb-2">
                                                    <label class="form-label">Author</label>
                                                    <input type="text" class="form-control" name="Author" value="@book.Author" required />
                                                </div>
                                                <div class="col-md-4 mb-2">
                                                    <label class="form-label">Price</label>
                                                    <input type="number" step="0.01" class="form-control" name="Price" value="@book.Price" required />
                                                </div>
                                            </div>
                                            <div class="mt-2">
                                                <button type="submit" class="btn btn-success">
                                                    <i class="bi bi-check-lg"></i> Save
                                                </button>
                                                <button type="button" class="btn btn-secondary" onclick="toggleEdit(@book.Id)">
                                                    <i class="bi bi-x-lg"></i> Cancel
                                                </button>
                                            </div>
                                        </form>
                                    </td>
                                    <td></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center">
                    <p>No books found. Click "Add New Book" to create one.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <style>
        .card {
            border-radius: 8px;
            overflow: hidden;
        }

        .card-header {
            font-weight: 600;
        }

        .table th {
            background-color: #343a40;
            color: white;
        }

        .btn-sm {
            margin-right: 5px;
        }

        .edit-book-form label {
            font-weight: 500;
        }

        .alert {
            margin-bottom: 0;
        }
    </style>
}

@section Scripts {
    <script>
        function toggleEdit(bookId) {
            const bookRow = document.getElementById('book-row-' + bookId);
            const editRow = document.getElementById('edit-row-' + bookId);

            if (bookRow.style.display !== 'none') {
                bookRow.style.display = 'none';
                editRow.style.display = 'table-row';
            } else {
                bookRow.style.display = 'table-row';
                editRow.style.display = 'none';
            }
        }

        // Auto-dismiss alerts after 5 seconds
        window.setTimeout(function() {
            document.querySelectorAll('.alert').forEach(function(alert) {
                if (alert.querySelector('.btn-close')) {
                    alert.querySelector('.btn-close').click();
                }
            });
        }, 5000);
    </script>
}
